lexer grammar xmlLexer;

@lexer::members {
  String tag = "";
}

fragment
LETTER:		[a-zA-Z];

fragment
NUMBER:		[0-9];

fragment
NONZERO:	[1-9];

fragment
TAGOPENSTART: 	'<';

fragment
TAGCLOSESTART:	'</';

fragment
TAGEND:		'>';

fragment
SPECIALCHAR:	('-' | '_' | '~' | '!' | '$' | '&' | '\'' | '(' | ')' | '*' | '+' | ',' | ';' | '=');

fragment
LOCALPART:	(LETTER | NUMBER | SPECIALCHAR) (LETTER | NUMBER | SPECIALCHAR | ('.' (LETTER | NUMBER | SPECIALCHAR)))+;

fragment
DOMAINPART:	'@' LOCALPART;

fragment
DAYPART:	('0' NONZERO) | ('1' | '2') NUMBER | '31' | '30';

fragment
MONTHPART:	('0' NONZERO) | '10' | '11' | '12';

fragment
YEARPART:	'2' ('0' | '1') NUMBER NUMBER;

fragment
VISA:		('4' NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER
			| '4' NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER);
			
fragment
MASTERCARD:	('51' | '52' | '53' | '54' | '55')
			NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER;
			 
fragment
EXPRESS:	('34' | '37')
			NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER;
		
fragment
DINERSCLUB:	(('305' | '304' | '303' | '302' | '301' | '300')
			 NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER) | 
			(('36' | '38')
			 NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER);
			 
fragment
DINERMASTERCARD:	'5' NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER;

fragment
DISCOVER:	(('6011'  NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER)
			| ('65'  NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER));
			
fragment
JCB:		((('2131' | '1800')  NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER)
			| ('35'  NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER NUMBER));



STARTELEMENT:	TAGOPENSTART (LETTER | '_') (LETTER | NUMBER | '-' | '_' | '.')+ TAGEND 
	{
         System.out.println("Found Start Tag: " + getText());
		 tag = getText();
    };
	
ENDELEMENT:	TAGCLOSESTART (LETTER | '_') (LETTER | NUMBER | '-' | '_' | '.')+ TAGEND 
	{
         System.out.println("Found End Tag: " + getText());
		 tag = getText();
    };
	
EMAIL:		LOCALPART DOMAINPART
	{
		System.out.println("Found Email: " + getText());
	};
	
DATE:		DAYPART '/' MONTHPART '/' YEARPART
	{
		System.out.println("Found Date: " + getText());
	};
	
PHONE:		((NUMBER NUMBER NUMBER '-' NUMBER NUMBER NUMBER '-' NUMBER NUMBER NUMBER NUMBER) 
			| ('(' NUMBER NUMBER NUMBER ')' ' ' NUMBER NUMBER NUMBER '-' NUMBER NUMBER NUMBER NUMBER) 
			| (NUMBER NUMBER NUMBER ' ' NUMBER NUMBER NUMBER ' ' NUMBER NUMBER NUMBER NUMBER) 
			| (NUMBER NUMBER NUMBER '.' NUMBER NUMBER NUMBER '.' NUMBER NUMBER NUMBER NUMBER))
	{
		System.out.println("Found Phone Number: " + getText());
	};
	
CREDITCARD:	(VISA | MASTERCARD | EXPRESS | DINERSCLUB | DINERMASTERCARD | DISCOVER | JCB)
	{
		System.out.println("Found Phone Number: " + getText());
	};
	
SPACE:	('\r' | '\n');